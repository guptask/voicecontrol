#!/usr/bin/python

# Ubuntu/Debian script

import pyaudio,os
import speech_recognition as sr
import subprocess

# Use xdotool for mouse and keyboard control

def announce(message):
    espeak_cmd = 'espeak -v mb-us1 -s 170 "' + message + '"'
    subprocess.check_output(espeak_cmd, shell=True)

def betty(command):
    betty_cmd = '~/.betty/main.rb ' + command
    output = subprocess.check_output(betty_cmd, shell=True)
    return output

def goonline(source):
    announce('Okay. Ask a question. I will search it')
    audio = r.listen(source)
    try:
        announce(betty('turn web on'))
        cmd = r.recognize_google(audio).lower()
        print(cmd)
        announce(betty('turn web off'))

    except sr.UnknownValueError : return
    except sr.RequestError      : return

def execute(command):
    os.system(command)

def validCommand(source):
    audio = r.listen(source)
    try:
        cmd = r.recognize_google(audio).lower()
        print(cmd)
        if   cmd == "open chrome"    : execute('google-chrome&')
        elif cmd == "open downloads" : execute('nautilus $HOME/Downloads/ &')
        elif cmd == "open search"    : execute('gnome-do&')
        elif cmd == "lock screen"    : execute('xdotool key super+l')
        elif cmd == "go online"      : goonline(source)
        else                         : return False

    except sr.UnknownValueError : return False
    except sr.RequestError      : return False

    announce('Say activate before using me again')
    return True

def activate(source):
    audio = r.listen(source)
    try:
        cmd = r.recognize_google(audio).lower()
        if cmd == "activate" : 
            announce('Hello. What do you want ?')
            while validCommand(source) == False : pass

    except sr.UnknownValueError : return
    except sr.RequestError      : return


if __name__ == "__main__":
    r = sr.Recognizer()
    with sr.Microphone() as source:
        r.adjust_for_ambient_noise(source, duration = 1)
        while 1:
            activate(source)
